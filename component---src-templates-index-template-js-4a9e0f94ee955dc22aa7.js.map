{"version":3,"sources":["webpack:///./src/templates/index-template.js","webpack:///./src/components/Footer/Author/Author.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Feed/Feed.js","webpack:///./src/components/Feed/index.js"],"names":["query","IndexTemplate","data","pageContext","site","siteMetadata","siteTitle","title","siteSubtitle","subtitle","currentPage","edges","allMarkdownRemark","pageTitle","description","isIndex","Author","author","className","styles","to","src","withPrefix","photo","width","height","alt","name","PureFooter","menu","href","Footer","props","render","Feed","map","edge","id","node","fields","slug","slice","key","frontmatter","xmlns","fill","viewBox","d"],"mappings":"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","file":"component---src-templates-index-template-js-4a9e0f94ee955dc22aa7.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\n// import Pagination from '../components/Pagination';\n\nconst IndexTemplate = ({ data, pageContext }) => {\n  const {\n    title: siteTitle,\n    subtitle: siteSubtitle\n  } = data.site.siteMetadata;\n\n  const {\n    currentPage,\n    // hasNextPage,\n    // hasPrevPage,\n    // prevPagePath,\n    // nextPagePath\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Header isIndex />\n      <Page>\n        <Feed edges={edges} />\n        {/* <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        /> */}\n      </Page>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n      }\n    }\n    allMarkdownRemark(\n        limit: $postsLimit,\n        skip: $postsOffset,\n        filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n","import React from 'react';\nimport { withPrefix, Link } from 'gatsby';\nimport styles from './Author.module.scss';\n\nconst Author = ({ author, isIndex }) => (\n  <div className={styles['author']}>\n    <Link to=\"/\">\n      <img\n        src={withPrefix(author.photo)}\n        className={styles['author__photo']}\n        width=\"32\"\n        height=\"32\"\n        alt={author.name}\n      />\n    </Link>\n\n    { isIndex ? (\n      <h1 className={styles['author__title']}>\n        <Link className={styles['author__title-link']} to=\"/\">{author.name}</Link>\n      </h1>\n    ) : (\n      <h2 className={styles['author__title']}>\n        <Link className={styles['author__title-link']} to=\"/\">{author.name}</Link>\n      </h2>\n    )}\n    {/* <p className={styles['author__subtitle']}>{author.bio}</p> */}\n  </div>\n);\n\nexport default Author;\n","import React from 'react';\nimport { graphql, StaticQuery, Link } from 'gatsby';\nimport Author from './Author';\nimport Menu from './Menu';\nimport styles from './Footer.module.scss';\n\nexport const PureFooter = ({ data, isIndex }) => {\n  const { author, menu } = data.site.siteMetadata;\n\n  return (\n    <div className={styles['footer']}>\n      <div className={styles['footer__inner']}>\n        <Author author={author} isIndex={isIndex} />\n        {/* <div className={styles['footer__row0']}>\n          <div className={styles['footer__col']}>\n            <ul style={{ margin: 0 }}>\n              <li style={{ margin: 0 }}>\n                <b>\n                  <a\n                    href=\"https://edge.avisa.dev/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    className={styles['footer__col-link']}\n                  >\n                    AVISA Platform\n                  </a>\n                </b>\n              </li>\n            </ul>\n          </div>\n        </div> */}\n        <div className={styles['footer__row']}>\n          <div className={styles['footer__col']}>\n            <ul>\n              <li>\n                <b>\n                  <Link to=\"/ai/\" className={styles['footer__col-link']}>\n                    AI\n                  </Link>\n                </b>\n              </li>\n              <li>\n                <Link\n                  to=\"/learn/reinforcement-learning/\"\n                  className={styles['footer__col-link']}\n                >\n                  Reinforcement Learning\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/learn/natural-language-processing/\"\n                  className={styles['footer__col-link']}\n                >\n                  Natural Language Processing\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/learn/streaming-data/\"\n                  className={styles['footer__col-link']}\n                >\n                  Streaming Data\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className={styles['footer__col']}>\n            <ul>\n              <li>\n                <b>\n                  <Link to=\"/iot/\" className={styles['footer__col-link']}>\n                    IoT\n                  </Link>\n                </b>\n              </li>\n              <li>\n                <Link\n                  to=\"/learn/edge-computing/\"\n                  className={styles['footer__col-link']}\n                >\n                  Edge Computing\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/learn/cloud-computing/\"\n                  className={styles['footer__col-link']}\n                >\n                  Cloud Computing\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/learn/data-visualization/\"\n                  className={styles['footer__col-link']}\n                >\n                  Data Visualization\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className={styles['footer__col']}>\n            <ul>\n              <li>\n                <b>Platform</b>\n              </li>\n              <li>\n                  <a\n                    href=\"/learn/avisa-platform/\"\n                    // target=\"_blank\"\n                    // rel=\"noopener\"\n                    className={styles['footer__col-link']}\n                  >\n                    About\n                  </a>\n              </li>\n              {/* <li>\n                <Link to=\"/about/\" className={styles['footer__col-link']}>\n                  About\n                </Link>\n              </li> */}\n              {/* <li>\n                <Link to=\"/learn/\" className={styles['footer__col-link']}>\n                  Learn\n                </Link>\n              </li> */}\n            </ul>\n          </div>\n        </div>\n        {/* <Menu menu={menu} /> */}\n        <div className={styles['footer__copyright']}>\n          Copyright © 2019 Artin Kajal Ltd. All rights reserved.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Footer = (props) => (\n  <StaticQuery\n    query={graphql`\n      query FooterQuery {\n        site {\n          siteMetadata {\n            title\n            subtitle\n            copyright\n            menu {\n              label\n              path\n            }\n            author {\n              name\n              photo\n              bio\n              contacts {\n                twitter\n                telegram\n                github\n                email\n                rss\n                vkontakte\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <PureFooter {...props} data={data} />}\n  />\n);\n\nexport default Footer;\n","export { default } from './Footer';\n","import React from 'react';\n// import moment from 'moment';\nimport { Link } from 'gatsby';\nimport styles from './Feed.module.scss';\n\nconst Feed = ({ edges }) => (\n  <div className={styles['feed']}>\n    {edges.map((edge) => (\n      <div className={styles['feed__item']} id={edge.node.fields.slug.slice(7, -1)} key={edge.node.fields.slug}>\n        {/* <div className={styles['feed__item-meta']}>\n          <time className={styles['feed__item-meta-time']} dateTime={moment(edge.node.frontmatter.date).format('MMMM D, YYYY')}>\n            {moment(edge.node.frontmatter.date).format('MMMM YYYY')}\n          </time>\n          <span className={styles['feed__item-meta-divider']} />\n          <span className={styles['feed__item-meta-category']}>\n            <Link to={edge.node.fields.categorySlug} className={styles['feed__item-meta-category-link']}>{edge.node.frontmatter.category}</Link>\n          </span>\n        </div> */}\n        <h2 className={styles['feed__item-title']}>\n          <Link className={styles['feed__item-title-link']} to={edge.node.fields.slug}>{edge.node.frontmatter.title}</Link>\n        </h2>\n        <p className={styles['feed__item-description']}>{edge.node.frontmatter.description}</p>\n        <Link className={styles['feed__item-readmore']} to={edge.node.fields.slug}>\n          Learn more\n          {' '}\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" fill=\"#03a9f4\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/>\n          </svg>\n        </Link>\n      </div>\n    ))}\n  </div>\n);\n\nexport default Feed;\n","export { default } from './Feed';\n"],"sourceRoot":""}